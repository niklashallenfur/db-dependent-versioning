//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Diffluxum.DbVersioning.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class SqlResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SqlResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Diffluxum.DbVersioning.Resources.SqlResources", typeof(SqlResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE [dbo].[DbVersioningHistory](
        ///	[ID] [int] IDENTITY(1,1) NOT NULL,
        ///	[ScriptVersion] [nvarchar](100) NOT NULL,
        ///	[ExecutedFrom] [nvarchar](512) NOT NULL,
        ///	[Description] [nvarchar](512) NOT NULL,
        ///	[DependentOnScriptVersion] [nvarchar](100) NULL,
        ///	[DateExecutedUtc] [datetime] NOT NULL,
        ///	[Signature] [nvarchar](512) NOT NULL
        /// CONSTRAINT [PK_DbVersioningHistory] PRIMARY KEY CLUSTERED 
        ///(
        ///	[ScriptVersion] ASC
        ///)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_RO [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CreateDbVersionHistory {
            get {
                return ResourceManager.GetString("CreateDbVersionHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE DbVersioningHistory SET ScriptVersion = &apos;{1}&apos; WHERE ScriptVersion = &apos;{0}&apos;
        ///GO
        ///UPDATE DbVersioningHistory SET DependentOnScriptVersion = &apos;{1}&apos; WHERE DependentOnScriptVersion = &apos;{0}&apos;
        ///GO.
        /// </summary>
        public static string RemapScriptVersion {
            get {
                return ResourceManager.GetString("RemapScriptVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N&apos;[dbo].[FK_DbVersioningHistory_DbVersioningHistory]&apos;) AND parent_object_id = OBJECT_ID(N&apos;[dbo].[DbVersioningHistory]&apos;))
        ///ALTER TABLE [dbo].[DbVersioningHistory] DROP CONSTRAINT [FK_DbVersioningHistory_DbVersioningHistory]
        ///GO.
        /// </summary>
        public static string RemoveForeginKey {
            get {
                return ResourceManager.GetString("RemoveForeginKey", resourceCulture);
            }
        }
    }
}
